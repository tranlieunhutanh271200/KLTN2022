// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/room.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Room.gRPC {
  public static partial class RoomManager
  {
    static readonly string __ServiceName = "room.RoomManager";

    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    static readonly grpc::Marshaller<global::Room.gRPC.GetRoomsRequest> __Marshaller_room_GetRoomsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.GetRoomsRequest.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.GetRoomsResponse> __Marshaller_room_GetRoomsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.GetRoomsResponse.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.RoomModel> __Marshaller_room_RoomModel = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.RoomModel.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.GetAvailableRoomsRequest> __Marshaller_room_GetAvailableRoomsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.GetAvailableRoomsRequest.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.BookRoomRequest> __Marshaller_room_BookRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.BookRoomRequest.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.BookRoomResponse> __Marshaller_room_BookRoomResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.BookRoomResponse.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.ReleaseRoomRequest> __Marshaller_room_ReleaseRoomRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.ReleaseRoomRequest.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.ReleaseRoomResponse> __Marshaller_room_ReleaseRoomResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.ReleaseRoomResponse.Parser));
    static readonly grpc::Marshaller<global::Room.gRPC.ReleaseRoomsRequest> __Marshaller_room_ReleaseRoomsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Room.gRPC.ReleaseRoomsRequest.Parser));

    static readonly grpc::Method<global::Room.gRPC.GetRoomsRequest, global::Room.gRPC.GetRoomsResponse> __Method_GetAllRooms = new grpc::Method<global::Room.gRPC.GetRoomsRequest, global::Room.gRPC.GetRoomsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllRooms",
        __Marshaller_room_GetRoomsRequest,
        __Marshaller_room_GetRoomsResponse);

    static readonly grpc::Method<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel> __Method_AddRoom = new grpc::Method<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddRoom",
        __Marshaller_room_RoomModel,
        __Marshaller_room_RoomModel);

    static readonly grpc::Method<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel> __Method_UpdateRoom = new grpc::Method<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateRoom",
        __Marshaller_room_RoomModel,
        __Marshaller_room_RoomModel);

    static readonly grpc::Method<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel> __Method_DeleteRoom = new grpc::Method<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteRoom",
        __Marshaller_room_RoomModel,
        __Marshaller_room_RoomModel);

    static readonly grpc::Method<global::Room.gRPC.GetAvailableRoomsRequest, global::Room.gRPC.GetRoomsResponse> __Method_GetAvailableRooms = new grpc::Method<global::Room.gRPC.GetAvailableRoomsRequest, global::Room.gRPC.GetRoomsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAvailableRooms",
        __Marshaller_room_GetAvailableRoomsRequest,
        __Marshaller_room_GetRoomsResponse);

    static readonly grpc::Method<global::Room.gRPC.BookRoomRequest, global::Room.gRPC.BookRoomResponse> __Method_BookRoom = new grpc::Method<global::Room.gRPC.BookRoomRequest, global::Room.gRPC.BookRoomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BookRoom",
        __Marshaller_room_BookRoomRequest,
        __Marshaller_room_BookRoomResponse);

    static readonly grpc::Method<global::Room.gRPC.BookRoomRequest, global::Room.gRPC.BookRoomResponse> __Method_ExpandBookTime = new grpc::Method<global::Room.gRPC.BookRoomRequest, global::Room.gRPC.BookRoomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ExpandBookTime",
        __Marshaller_room_BookRoomRequest,
        __Marshaller_room_BookRoomResponse);

    static readonly grpc::Method<global::Room.gRPC.ReleaseRoomRequest, global::Room.gRPC.ReleaseRoomResponse> __Method_ReleaseRoomManual = new grpc::Method<global::Room.gRPC.ReleaseRoomRequest, global::Room.gRPC.ReleaseRoomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReleaseRoomManual",
        __Marshaller_room_ReleaseRoomRequest,
        __Marshaller_room_ReleaseRoomResponse);

    static readonly grpc::Method<global::Room.gRPC.ReleaseRoomsRequest, global::Room.gRPC.ReleaseRoomResponse> __Method_ReleaseRooms = new grpc::Method<global::Room.gRPC.ReleaseRoomsRequest, global::Room.gRPC.ReleaseRoomResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReleaseRooms",
        __Marshaller_room_ReleaseRoomsRequest,
        __Marshaller_room_ReleaseRoomResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Room.gRPC.RoomReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RoomManager</summary>
    [grpc::BindServiceMethod(typeof(RoomManager), "BindService")]
    public abstract partial class RoomManagerBase
    {
      /// <summary>
      ///Get rooms
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.GetRoomsResponse> GetAllRooms(global::Room.gRPC.GetRoomsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Add room
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.RoomModel> AddRoom(global::Room.gRPC.RoomModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Update room
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.RoomModel> UpdateRoom(global::Room.gRPC.RoomModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Delete room
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.RoomModel> DeleteRoom(global::Room.gRPC.RoomModel request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Get all available rooms for booking
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.GetRoomsResponse> GetAvailableRooms(global::Room.gRPC.GetAvailableRoomsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Book room for purpose
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.BookRoomResponse> BookRoom(global::Room.gRPC.BookRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Expand booking time
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.BookRoomResponse> ExpandBookTime(global::Room.gRPC.BookRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Release room by manually
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.ReleaseRoomResponse> ReleaseRoomManual(global::Room.gRPC.ReleaseRoomRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Release rooms
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::Room.gRPC.ReleaseRoomResponse> ReleaseRooms(global::Room.gRPC.ReleaseRoomsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RoomManagerBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAllRooms, serviceImpl.GetAllRooms)
          .AddMethod(__Method_AddRoom, serviceImpl.AddRoom)
          .AddMethod(__Method_UpdateRoom, serviceImpl.UpdateRoom)
          .AddMethod(__Method_DeleteRoom, serviceImpl.DeleteRoom)
          .AddMethod(__Method_GetAvailableRooms, serviceImpl.GetAvailableRooms)
          .AddMethod(__Method_BookRoom, serviceImpl.BookRoom)
          .AddMethod(__Method_ExpandBookTime, serviceImpl.ExpandBookTime)
          .AddMethod(__Method_ReleaseRoomManual, serviceImpl.ReleaseRoomManual)
          .AddMethod(__Method_ReleaseRooms, serviceImpl.ReleaseRooms).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RoomManagerBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAllRooms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.GetRoomsRequest, global::Room.gRPC.GetRoomsResponse>(serviceImpl.GetAllRooms));
      serviceBinder.AddMethod(__Method_AddRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel>(serviceImpl.AddRoom));
      serviceBinder.AddMethod(__Method_UpdateRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel>(serviceImpl.UpdateRoom));
      serviceBinder.AddMethod(__Method_DeleteRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.RoomModel, global::Room.gRPC.RoomModel>(serviceImpl.DeleteRoom));
      serviceBinder.AddMethod(__Method_GetAvailableRooms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.GetAvailableRoomsRequest, global::Room.gRPC.GetRoomsResponse>(serviceImpl.GetAvailableRooms));
      serviceBinder.AddMethod(__Method_BookRoom, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.BookRoomRequest, global::Room.gRPC.BookRoomResponse>(serviceImpl.BookRoom));
      serviceBinder.AddMethod(__Method_ExpandBookTime, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.BookRoomRequest, global::Room.gRPC.BookRoomResponse>(serviceImpl.ExpandBookTime));
      serviceBinder.AddMethod(__Method_ReleaseRoomManual, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.ReleaseRoomRequest, global::Room.gRPC.ReleaseRoomResponse>(serviceImpl.ReleaseRoomManual));
      serviceBinder.AddMethod(__Method_ReleaseRooms, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Room.gRPC.ReleaseRoomsRequest, global::Room.gRPC.ReleaseRoomResponse>(serviceImpl.ReleaseRooms));
    }

  }
}
#endregion
